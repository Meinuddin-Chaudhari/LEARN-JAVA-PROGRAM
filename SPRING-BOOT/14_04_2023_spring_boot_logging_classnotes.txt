Saturday,Sunday(9.00AM to 2.00PM IST)
=====================================
SpringDataJPA
SpringBootMongoDB

Tuesday,wednesday,Thursday(6.30AM to 9.30AM)
============================================
SpringAOP
SpringSecurity
SpringMail


SpringBoot using Log4j
======================
Logger levels of SL4J are  
	=> debug<info<trace<warn<error

=> By default SpringBoot uses SL4J with log4j to generate the log messages
=> <dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter</artifactId>
   </dependency>


DotNetCourseMaterial.java
=========================
@Component(value = "dotNet")
public final class DotNetCourseMaterial implements ICourseMaterial {

}

JavaCourseMaterial.java
=======================
@Component(value="java")
public final class JavaCourseMaterial implements ICourseMaterial {

}

Student.java
============
@Component(value = "student")
public class Student {

	private Logger logger = LoggerFactory.getLogger(Student.class);

	@Autowired
	@Qualifier("courseId")
	private ICourseMaterial material;

}

Using file as the appenders to record the log messages
======================================================

application.properties	
======================
course.choose=dotNet
logging.level.in.ineuron.beans=TRACE
logging.file.name=log.txt
logging.pattern.file=%c %r %t  %p  %m %d  %n 
logging.pattern.console=%30c %r [%t]  %p  %m %d  %L %F %n 


BootLoggingUsingLog4jApplication.java
=====================================
@SpringBootApplication
@ImportResource(locations = "applicationContext.xml")
public class BootLoggingUsingLog4jApplication {

	public static void main(String[] args) {
		ApplicationContext context = SpringApplication.run(BootLoggingUsingLog4jApplication.class, args);

		Student student = context.getBean(Student.class);
		System.out.println(student);
		
		student.preparation("java");

		((ConfigurableApplicationContext) context).close();
	}
}

output
======
in.ineuron.BootLoggingUsingLog4jApplication 561 main  INFO  Starting BootLoggingUsingLog4jApplication using Java 1.8.0_202 on DESKTOP-1N5U4UJ with PID 23548 (D:\EclipseMavenPrograms\Boot-logging-using-Log4j\target\classes started by nitin in 
	D:\EclipseMavenPrograms\Boot-logging-using-Log4j) 2023-04-14 22:27:33,033  
in.ineuron.BootLoggingUsingLog4jApplication 564 main  INFO  No active profile set, falling back to 1 default profile: 
					"default" 2023-04-14 22:27:33,036  
in.ineuron.BootLoggingUsingLog4jApplication 1636 main  INFO  Started BootLoggingUsingLog4jApplication in 1.481 seconds (JVM running for 2.272) 2023-04-14 22:27:34,108  
in.ineuron.beans.Student 1643 main  DEBUG  control entering inside Student :: preparation(,) 2023-04-14 22:27:34,115  
in.ineuron.beans.UICourseMaterial 1657 main  DEBUG  control entering inside UICourseMaterial :: courseContent 2023-04-14 22:27:34,129  
in.ineuron.beans.Student 1658 main  INFO  Course content is choosen :: 1.HTML 2.CSS 3.JavaScript 2023-04-14 22:27:34,130  
in.ineuron.beans.Student 1659 main  INFO  Course price is ready :: 500.0 2023-04-14 22:27:34,131  
in.ineuron.beans.Student 1659 main  DEBUG  control exiting from Student :: prepartion(,) 2023-04-14 22:27:34,131

  
 
Integrating SpringBoot SL4J using Log4j2
========================================
=> Keep old project ready with the following setup
=> remove spring-boot-starter-logging from spring-boot-starter

pom.xml
=======
<dependency>
       <groupId>org.springframework.boot</groupId>
       <artifactId>spring-boot-starter-log4j2</artifactId>
</dependency>
<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter</artifactId>
		<exclusions>
			<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
		</exclusions>
</dependency>


Working with console appender Keep log4j2-spring.xml file in src/main/resources
===============================================================================
<?xml version="1.0" encoding="UTF-8"?>
<Configuration >
    <Appenders>
        <Console name="cons" target="SYSTEM_OUT">
            <PatternLayout
                    pattern="[%d{MM:dd HH:mm:ss.SSS}] [%p] [%c] - %m %F %L %n"/>
        </Console>
    </Appenders>
    <Loggers>
        <Root level="trace">
            <AppenderRef ref="cons"/>
        </Root>
    </Loggers>
</Configuration> 


Working with RollingFileAppender and PatternLayout Keep log4j2-spring.xml file in src/main/resources
===================================================================================================
<Configuration>
	<Appenders>
		<RollingFile
			name="rollingFile"
			fileName="D:/application_msg.log"
			filePattern="D:/application_msg.%i.log.zip"
			ignoreExceptions="false">
			<PatternLayout>
				<Pattern>%d{yyyy-MM-dd HH:mm:ss} %-5p %m %F %L %n</Pattern>
			</PatternLayout>
			<Policies>
				<SizeBasedTriggeringPolicy size="5kb" />
			</Policies>
			<DefaultRolloverStrategy max="3" />
		</RollingFile>
	</Appenders>
	<Loggers>
		<Root level="DEBUG">
			<AppenderRef ref="rollingFile" />
		</Root>
	</Loggers>
</Configuration>

Working with DailyRollingFileAppender and PatternLayout Keep log4j2-spring.xml file in src/main/resources
========================================================================================================
<Configuration >
    <Appenders>
      <RollingFile
    name="rollingFile"
    fileName="E:/app_msg.log"
    filePattern="D:/app_msg.%d{yyyy-MM-dd-hh-mm}.log.gz"
    ignoreExceptions="false">
    <PatternLayout>
        <Pattern>%d{yyyy-MM-dd HH:mm:ss} %-5p %m%n</Pattern>
    </PatternLayout>
    <Policies>
        <TimeBasedTriggeringPolicy  filePattern="D:/app_msg.%d{yyyy-MM-dd-hh-mm}.log.gz"  />
    </Policies>
    <DefaultRolloverStrategy max="5" />
</RollingFile>
</Appenders>
 <Loggers>
        <Root level="trace">
            <AppenderRef ref="rollingFile"/>
        </Root>
    </Loggers>
</Configuration> 









